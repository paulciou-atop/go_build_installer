name: Build Windows Installer 
on: 
  push:
    branches: 
      -'main'
      -'!test/**'
  pull_request:
    types: [opened, reopened, review_requested]
    branches: 
      -'main'
      -'!test/**'
  workflow_dispatch:
    inputs:
      user:
        description: 'user'     
      modules:
        description: 'modules to test' 
jobs:
  Docker-Artifacts-Upload:
    runs-on: windows-latest
    steps:
      - name: Checkout Repository Code
        uses: actions/checkout@v3
        
      - uses: actions/setup-go@v3
        with:
          go-version: '^1.18.0' # The Go version to download (if necessary) and use.
      - run: go version
      - name: install tools
        run: |
          choco source add -n=mh-cbon -s="https://api.bintray.com/nuget/mh-cbon/choco"
          choco install changelog gh-api-cli -y 
          choco install go-msi          
          refreshenv
          set GH_APP=%APPVEYOR_PROJECT_NAME%
          set GH_USER=%APPVEYOR_ACCOUNT_NAME%
          set VERSION=%APPVEYOR_REPO_TAG_NAME%
          if "%x%"=="%VERSION%" set VERSION=1.0.2
          set PATH=%WIX%\bin;%PATH%
          set PATH=%GOPATH%\bin;%PATH%
          curl -fsSk -o jfrog.exe -L "https://api.bintray.com/content/jfrog/jfrog-cli-go/$latest/jfrog-cli-windows-amd64/jfrog.exe?bt_package=jfrog-cli-windows-amd64"
          go get -u github.com/mh-cbon/never-fail
          go get -u github.com/Masterminds/glide
          glide install   
          
          
          
          
          
      - name: before_test
        run: | 
          mkdir C:\go-msi\
          set GOARCH=amd64
          go build -o C:\go-msi\go-msi.exe --ldflags "-X main.VERSION=%VERSION%" main.go
          XCOPY /I /E templates C:\go-msi\templates
          
          cd testing\\hello
          glide install
          cd ..
          glide install
          cd ..
          run tests
          go run testing\\main.go
          cd && dir *msi
          
          
    
  

      
